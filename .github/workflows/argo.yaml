name: ArgoCD workflow

on:
  workflow_run:
    workflows: ["Terraform workflow"]
    types:
      - completed
  push:
    paths:
      - 'argocd/**'  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Check if triggered by main branch
        id: check_branch
        run: |
          if [[ "${{ github.event.workflow_run.head_branch }}" != "main" ]]; then
            echo "This workflow was not triggered by the main branch. Exiting."
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/            

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name main-eks-cluster

      - name: Retrieve ArgoCD Server Address
        run: |
          ARGOCD_SERVER=$(kubectl get svc -n argocd argocd-server -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "ARGOCD_SERVER=$ARGOCD_SERVER" >> $GITHUB_ENV

      - name: Retrieve and Decode ArgoCD Admin Password from Cluster Secret
        run: |
          ARGOCD_PASSWORD=$(kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 --decode)
          echo "ARGOCD_PASSWORD=$ARGOCD_PASSWORD" >> $GITHUB_ENV

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: Login to ArgoCD
        run: |
          argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure --skip-test-tls --grpc-web

      - name: Add Private GitHub Repo to ArgoCD
        run: |
          REPO_URL="${{ secrets.REPO_URL }}"
          GH_USERNAME="${{ secrets.GH_USERNAME }}"
          GH_TOKEN="${{ secrets.GH_TOKEN }}"
          argocd repo add https://github.com/MariusB-DevOps/k8s --username "marius@osips.eu" --password "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" --type git --insecure-skip-server-verification

      - name: Deploy application
        run: kubectl apply -f argocd/config/argocd-app.yaml
