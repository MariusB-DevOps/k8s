name: Deploy to EKS

on:
  push:
    branches:
      - main
      - feature/eks

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply VPC and SSH Key
      env:
        TF_VAR_public_key_content: ${{ secrets.SSH_PUBLIC_KEY_CONTENT }}
      run: terraform apply -auto-approve -target=module.vpc -target=module.ssh_key

    - name: Terraform Apply Subnets and Security Groups
      run: terraform apply -auto-approve -target=module.subnet -target=module.security_group

    - name: Terraform Apply IGW and Route Table
      run: terraform apply -auto-approve -target=module.igw -target=module.route_table

    - name: Terraform Apply Network Interfaces
      run: terraform apply -auto-approve -target=module.network_interfaces

    - name: Terraform Apply EKS
      run: terraform apply -auto-approve -target=module.eks

    - name: Setup kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name your-cluster-name --region eu-west-1

    - name: Terraform Apply Kubernetes Namespace and Jenkins
      run: terraform apply -auto-approve -target=kubernetes_namespace.jenkins -target=helm_release.jenkins

    - name: Get NGINX Ingress External IP
      id: get_ip
      run: |
        EXTERNAL_IP=$(kubectl get svc nginx-ingress-controller -n kube-system -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "EXTERNAL_IP=${EXTERNAL_IP}" >> $GITHUB_ENV

    - name: Output External IP
      run: echo "The external IP is ${{ env.EXTERNAL_IP }}"

    - name: Retrieve Route 53 Zone ID
      id: get_zone_id
      run: |
        ZONE_ID=$(aws route53 list-hosted-zones-by-name --dns-name "k8s.it.com" --query "HostedZones[0].Id" --output text)
        echo "ZONE_ID=${ZONE_ID}" >> $GITHUB_ENV

    - name: Output Zone ID
      run: echo "The zone ID is ${{ env.ZONE_ID }}"

    - name: Terraform Apply Route 53
      run: terraform apply -auto-approve -target=aws_route53_record.jenkins
